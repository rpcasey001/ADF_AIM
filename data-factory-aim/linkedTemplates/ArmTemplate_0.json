{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "data-factory-aim"
		},
		"AIMBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AIMBlobStorage'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AIMBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AIMBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIM-MediumCluster')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 32,
							"timeToLive": 10
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RadioJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AIMBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "small_radio_json.json",
						"container": "samples"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ts": {
							"type": "integer"
						},
						"userId": {
							"type": "string"
						},
						"sessionId": {
							"type": "integer"
						},
						"page": {
							"type": "string"
						},
						"auth": {
							"type": "string"
						},
						"method": {
							"type": "string"
						},
						"status": {
							"type": "integer"
						},
						"level": {
							"type": "string"
						},
						"itemInSession": {
							"type": "integer"
						},
						"location": {
							"type": "string"
						},
						"lastName": {
							"type": "string"
						},
						"firstName": {
							"type": "string"
						},
						"registration": {
							"type": "integer"
						},
						"gender": {
							"type": "string"
						},
						"artist": {
							"type": "string"
						},
						"song": {
							"type": "string"
						},
						"length": {
							"type": "number"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AIMBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Radio_Table1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "col1",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Radio_Table1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIM Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RadioJSON",
								"type": "DatasetReference"
							},
							"name": "myAIM4Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Radio_Table1",
								"type": "DatasetReference"
							},
							"name": "SynapseRadioTable1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "CntSubtypeByGender"
						},
						{
							"name": "OriginalData"
						},
						{
							"name": "SubsByLocation"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "CleanUp"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tts as string,\n\t\tuserId as string,\n\t\tsessionId as string,\n\t\tpage as string,\n\t\tauth as string,\n\t\tmethod as string,\n\t\tstatus as string,\n\t\tlevel as string,\n\t\titemInSession as string,\n\t\tlocation as string,\n\t\tlastName as string,\n\t\tfirstName as string,\n\t\tregistration as string,\n\t\tgender as string,\n\t\tartist as string,\n\t\tsong as string,\n\t\tlength as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> myAIM4Source\nmyAIM4Source select(mapColumn(\n\t\t{time stamp} = ts,\n\t\tpage,\n\t\tmethod,\n\t\tstatus,\n\t\tlevel_type = level,\n\t\tlocation,\n\t\tlastName,\n\t\tfirstName,\n\t\tregistration,\n\t\tgender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(gender,\n\t\tlevel_type),\n\tCntSubtypeByGender = count(),\n\t\t{time stamp} = first({time stamp})) ~> CntSubtypeByGender\nSelect1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OriginalData\nSelect1 aggregate(groupBy(location),\n\tSubsByLocation = count(),\n\t\t{time stamp} = first({time stamp})) ~> SubsByLocation\nOriginalData, CntSubtypeByGender join(OriginalData@{time stamp} == CntSubtypeByGender@{time stamp},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1, SubsByLocation join(OriginalData@{time stamp} == SubsByLocation@{time stamp},\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\t{time stamp} = OriginalData@{time stamp},\n\t\tpage,\n\t\tmethod,\n\t\tstatus,\n\t\tlevel_type = OriginalData@level_type,\n\t\tlocation = OriginalData@location,\n\t\tlastName,\n\t\tfirstName,\n\t\tregistration,\n\t\tgender = OriginalData@gender,\n\t\tgender = CntSubtypeByGender@gender,\n\t\tlevel_type = CntSubtypeByGender@level_type,\n\t\tCntSubtypeByGender,\n\t\t{time stamp} = CntSubtypeByGender@{time stamp},\n\t\tlocation = SubsByLocation@location,\n\t\tSubsByLocation,\n\t\t{time stamp} = SubsByLocation@{time stamp}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CleanUp\nCleanUp derive(FullName = firstName + ' '+ lastName,\n\t\tstate = split(location, ', ') [2]) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tcol1 as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapseRadioTable1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RadioJSON')]",
				"[concat(variables('factoryId'), '/datasets/Radio_Table1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIM Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AIM Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "AIM Dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"myAIM4Source": {},
									"SynapseRadioTable1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/AIM Dataflow')]"
			]
		}
	]
}